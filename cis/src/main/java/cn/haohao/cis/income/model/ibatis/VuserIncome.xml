<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="VuserIncome">
	
	<resultMap id="VuserIncomeResult" type="cn.haohao.cis.income.model.VuserIncome">
		<result property="userId" column="USER_ID" />
		<result property="idCard" column="ID_CARD" />
		<result property="name" column="NAME" />
		<result property="password" column="PASSWORD" />
		<result property="sex" column="SEX" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="address" column="ADDRESS" />
		<result property="career" column="CAREER" />
		<result property="level" column="LEVEL" />
		<result property="status" column="STATUS" />
		<result property="userRole" column="USER_ROLE" />
		<result property="uplineUser" column="UPLINE_USER" />
		<result property="extend1" column="EXTEND1" />
		<result property="extend2" column="EXTEND2" />
		<result property="incomeDate" column="INCOME_DATE" />
		<result property="income" column="INCOME" />
		<result property="performance" column="PERFORMANCE" />
		<result property="reachPerformance" column="REACH_PERFORMANCE" />
	</resultMap>
	
	<resultMap id="VuserIncomeSumResult" type="cn.haohao.cis.income.model.VuserIncome">
		<result property="userId" column="USER_ID" />
		<result property="income" column="INCOME" />
		<result property="performance" column="PERFORMANCE" />
	</resultMap>
	
	<select id="VuserIncome.getById" resultMap="VuserIncomeResult">
		<![CDATA[
			select t.*
			from V_USER_INCOME t
			where user_id = #{userId}
		]]>
	</select>

	<select id="VuserIncome.getIncomeSum" resultMap="VuserIncomeSumResult">
		<![CDATA[
			select t.USER_ID,sum(t.INCOME) income,sum(t.PERFORMANCE) performance
			from V_USER_INCOME t
			group by t.USER_ID
			having t.USER_ID = #{userId}
		]]>
	</select>
		
	<sql id="VuserIncome.whereClause">
	 <where>
	  <trim prefixOverrides="and">
		   <if test="userId != null">and t.USER_ID = #{userId}</if>
		   <if test="idCard != null">and t.ID_CARD = #{idCard}</if>
		   <if test="name != null">and t.NAME = #{name}</if>
		   <if test="password != null">and t.PASSWORD = #{password}</if>
		   <if test="sex != null">and t.SEX = #{sex}</if>
		   <if test="birthday != null">and t.BIRTHDAY = #{birthday}</if>
		   <if test="address != null">and t.ADDRESS = #{address}</if>
		   <if test="career != null">and t.CAREER = #{career}</if>
		   <if test="level != null">and t.LEVEL = #{level}</if>
		   <if test="status != null">and t.STATUS = #{status}</if>
		   <if test="userRole != null">and t.USER_ROLE = #{userRole}</if>
		   <if test="uplineUser != null">and t.UPLINE_USER = #{uplineUser}</if>
		   <if test="extend1 != null">and t.EXTEND1 = #{extend1}</if>
		   <if test="extend2 != null">and t.EXTEND2 = #{extend2}</if>
		   <if test="incomeDate != null">and t.INCOME_DATE = #{incomeDate}</if>
		   <if test="income != null">and t.INCOME = #{income}</if>
		   <if test="performance != null">and t.PERFORMANCE = #{performance}</if>
		   <if test="reachPerformance != null">and t.REACH_PERFORMANCE = #{reachPerformance}</if>
		   <if test="nameOrIdCardLike != null">and (t.NAME like #{nameOrIdCardLike} or t.ID_CARD like #{nameOrIdCardLike})</if>
		   <if test="levelIn != null">
		   		and t.level in 
				<foreach collection="levelIn" item="level" separator="," open="(" close=")">
					#{level}
				</foreach>
		   </if>
		   <if test="dateSearch != null">and t.INCOME_DATE = #{dateSearch}</if>
	   </trim>
	 </where>
	 <if test="sort != null">
			order by
			<foreach collection="sort" item="order" separator=",">
				t.${order.property} ${order.direction}
			</foreach>
	 </if>
	</sql>
	
	<select id="VuserIncome.queryByArgs" resultMap="VuserIncomeResult">
		<![CDATA[
			select t.*
		]]>
		<![CDATA[
			from V_USER_INCOME t 
		]]>
		<include refid="VuserIncome.whereClause" />
	</select>
	
	<select id="VuserIncome.pageCountByArgs" resultMap="VuserIncomeResult">
		<![CDATA[
			select t.*
			from V_USER_INCOME t 
		]]>
		<include refid="VuserIncome.whereClause" />
		<![CDATA[
			limit #{startRowNum},#{pageSize}
		]]>
	</select>
	
	<select id="VuserIncome.pageCountByArgs.count" resultType="java.lang.Long">
		select count(1) from V_USER_INCOME t 
		<include refid="VuserIncome.whereClause" />
	</select>
	
	<select id="VuserIncome.countByArgs" resultType="java.lang.Long">
		select count(1) from V_USER_INCOME t 
		<include refid="VuserIncome.whereClause" />
	</select>
</mapper>